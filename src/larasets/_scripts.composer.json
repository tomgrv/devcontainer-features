{
    "scripts": {
        "inst": [
            "@composer install --ignore-platform-reqs"
        ],
        "link": [
            "@composer config repositories.local '{\"type\": \"path\", \"url\": \"@additional_args\"}' --file composer.json"
        ],
        "lint": [
            "vendor/bin/pint --ansi --dirty"
        ],
        "lock": [
            "@composer validate --no-check-all --strict 2>&1 | grep -oP 'Required package \"\\K[^\"]+' | while read -r package; do @composer require --ignore-platform-reqs --no-scripts --no-interaction --no-progress --no-install \"$package\"; done;",
            "@composer update --lock --minimal-changes --ignore-platform-reqs --no-scripts --no-interaction --no-progress --no-install"
        ],
        "post-autoload-dump": [
            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
            "@php artisan package:discover --ansi",
            "@php artisan filament:upgrade --ansi",
            "@php artisan optimize --ansi"
        ],
        "post-create-project-cmd": [
            "@php artisan key:generate --ansi",
            "@php -r \"file_exists('database/database.sqlite') || touch('database/database.sqlite');\"",
            "@php artisan migrate --graceful --ansi"
        ],
        "post-root-package-install": [
            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
        ],
        "post-update-cmd": [
            "@php artisan vendor:publish --tag=laravel-assets --ansi --force",
            "@php artisan ide-helper:generate --ansi",
            "@php artisan ide-helper:meta --ansi"
        ],
        "req": [
            "@composer require --ignore-platform-reqs --with-all-dependencies"
        ],
        "req-all": [
            "npx lerna exec -- composer require --ignore-platform-reqs --with-all-dependencies --no-install --no-interaction @additional_args; composer req @additional_args"
        ],
        "reqdev": [
            "@composer require --ignore-platform-reqs --with-all-dependencies --dev "
        ],
        "reqdev-all": [
            "npx lerna exec -- composer require --ignore-platform-reqs --with-all-dependencies --no-install --no-interaction --dev @additional_args; composer reqdev @additional_args"
        ],
        "rmv": [
            "@composer remove --ignore-platform-reqs --with-all-dependencies"
        ],
        "rmv-all": [
            "npx lerna exec -- composer remove --ignore-platform-reqs --with-all-dependencies --no-install --no-interaction @additional_args; composer rmv @additional_args"
        ],
        "test": [
            "vendor/bin/pest"
        ],
        "test-coverage": [
            "vendor/bin/pest --coverage"
        ],
        "upg": [
            "@composer update --ignore-platform-reqs --with-all-dependencies"
        ],
        "upg-all": [
            "npx lerna exec -- composer upgrade --ignore-platform-reqs --with-all-dependencies --no-install --no-interaction @additional_args; composer upg @additional_args"
        ]
    }
}
